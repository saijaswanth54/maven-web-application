
    node{ 
    
    def mavenhome = tool name: "maven-3.8.6"
    properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM(ignorePostCommitHooks: true, scmpoll_spec: ' * * * * *')])])
    echo "the job name is: ${env.JOB_NAME}"
    try{
    stage('checkoutcode'){
    git branch: 'development', credentialsId: '**/maven-web-application.war', url:     'https://github.com/saijaswanth54/maven-web-application.git'
    }
    
    stage('Build'){
    sh "${mavenhome}/bin/mvn clean package"
    }
     stage('Executesonarqube report'){
     sh "${mavenhome}/bin/mvn sonar:sonar"
    }
    stage('uploadArtifactsIntoNexus'){
    sh "${mavenhome}/bin/mvn deploy"
    }
stage('DeployAppIntoTomat'){
 sshagent(['7ea0d1b5-bbe0-43b6-ad3a-51f7d228a5e4']) {
 sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.234.29.166:/opt/apache-tomcat-9.0.64/webapps"   
}
}
}
catch(e){
currentBuild.result = "FAILED"
 throw e
}
 finally {
 notifyBuild(currentBuild.result)
 }
}//nodeclosing


def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }
